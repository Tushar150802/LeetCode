/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null || headB==null) return null;
        ListNode a=headA;
        ListNode b=headB;
        while(a!=b)
        {
            a=(a==null)?headA:a.next;
            b=(b==null)?headB:b.next;
        }
        return a;
    }
}
O(m+n)
O(1)

-----------------------
This can be solved using hash table where the addresses will be stored instead of values;
O(m+n)
O(n)
