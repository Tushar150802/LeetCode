class Solution {
    public int longestPalindromeSubseq(String s) {
        String s1=new StringBuilder(s).reverse().toString();
        return LCS(s,s1);
    }
    private int LCS(String x,String y)
    {
        int n=x.length();
        int m=y.length();
        int dp[][]=new int[n+1][m+1];
        for(int i=0;i<=n;i++)
            dp[i][0]=0;
        for(int j=0;j<=n;j++)
            dp[0][j]=0;
        
        for(int index1=1;index1<=n;index1++)
        {
            for(int index2=1;index2<=m;index2++)
            {
                if(x.charAt(index1-1)==y.charAt(index2-1))
                    dp[index1][index2]=1+dp[index1-1][index2-1];
                else
                    dp[index1][index2]=Math.max(dp[index1-1][index2],dp[index1][index2-1]);
            }
        }
        return dp[n][m];
    }
}
